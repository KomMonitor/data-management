openapi: 3.0.3
info:
  title: KomMonitor Data Access API
  description: "Definition einer Datenzugriffs-API, die den Zugriff auf die KomMonitor-Datenhaltungsschicht kapselt."
  contact:
    email: christian.danowski-buhren@hs-bochum.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: //localhost:8085/
tags:
  - name: access-control
    description: the AccessControl API
  - name: database-public
    description: the public Database API
  - name: georesources
    description: the Georesources API
  - name: georesources-public
    description: the public Georesources API
  - name: home-controller
    description: Home Controller
  - name: indicators
    description: the Indicators API
  - name: indicators-public
    description: the Indicators API
  - name: process-scripts
    description: the ProcessScripts API
  - name: process-scripts-public
    description: the ProcessScripts API
  - name: spatial-units
    description: the SpatialUnits API
  - name: spatial-units-public
    description: the public SpatialUnits API
  - name: topics
    description: the Topics API
  - name: topics-public
    description: the public Topics API
paths:
  /georesources:
    get:
      tags:
        - georesources
      summary: retrieve information about available features of different geo-resource
        datasets
      description: retrieve information about available features of different geo-resource
        datasets
      operationId: getGeoresources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoresourceOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    post:
      tags:
        - georesources
      summary: Add a new geo-resource
      description: Add/Register a geo-resource dataset for a certain period of time
      operationId: addGeoresourceAsBody
      requestBody:
        description: feature data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoresourcePOSTInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/GeoresourceOverviewType'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/GeoresourceOverviewType'
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
  /georesources/{georesourceId}:
    get:
      tags:
        - georesources
      summary: retrieve information about available features of the selected geo-resource
        dataset
      description: retrieve information about available features of the selected geo-resource
        dataset
      operationId: getGeoresourceById
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoresourceOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - georesources
      summary: Modify/Update the features of the selected geo-resource dataset
      description: "Modify/Update the features of the selected geo-resource dataset.\
        \  The interface expects a full upload of all geometries for the spatial unit.\
        \ Internally, those geometries are compared to the existing ones to mark 'old'\
        \ geometries that are no longer in use as outdated. Hence, each geometric\
        \ object is only persisted once and its use is controlled by time validity\
        \ marks."
      operationId: updateGeoresourceAsBody
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      requestBody:
        description: feature data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoresourcePUTInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: featureData
    delete:
      tags:
        - georesources
      summary: Delete the features/contents of the selected geo-resource dataset
      description: Delete the features/contents of the selected geo-resource dataset
      operationId: deleteGeoresourceById
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    patch:
      tags:
        - georesources
      summary: Modify/Update the metadata of the selected geo-resource dataset
      description: Modify/Update the metadata of the selected geo-resource dataset.
        This replaces the formerly stored metadata.
      operationId: updateGeoresourceMetadataAsBody
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      requestBody:
        description: metadata input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoresourcePATCHInputType'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: metadata
  /georesources/{georesourceId}/allFeatures:
    get:
      tags:
        - georesources
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected geo-resource dataset (hence might contain each feature multiple
        times if they exist for different periods of validity)
      description: retrieve all feature entries for all applicable periods of validity
        for the selected geo-resource dataset (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllGeoresourceFeaturesById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - georesources
      summary: Delete all features/contents of the selected geo-resource dataset
      description: Delete all features/contents of the selected geo-resource dataset
      operationId: deleteAllGeoresourceFeaturesById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/allFeatures/without-geometry:
    get:
      tags:
        - georesources
      summary: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      description: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      operationId: getAllGeoresourceFeaturesByIdWithoutGeometry
      parameters:
        - name: georesourceId
          in: path
          description: georesourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/permissions:
    get:
      tags:
        - georesources
      summary: retrieve information about the permissions for the selected geo-resource
        dataset
      description: retrieve information about the permissions for the selected geo-resource
        dataset
      operationId: getGeoresourcePermissionsById
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionLevelType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/schema:
    get:
      tags:
        - georesources
      summary: retrieve the JSON schema for the selected geo-resource dataset
      description: retrieve the JSON schema for the selected geo-resource dataset.
        The JSON schema indicates the property structure of the dataset.
      operationId: getGeoresourceSchemaByLevel
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/singleFeature/{featureId}:
    get:
      tags:
        - georesources
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getSingleGeoresourceFeatureById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - georesources
      summary: Delete all database records for the specified feature of the selected
        geo-resource dataset
      description: Delete all database records for the specified feature of the selected
        geo-resource dataset
      operationId: deleteSingleGeoresourceFeatureById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - georesources
      summary: retrieve single feature database record specified by its unique database
        primary key id
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getSingleGeoresourceFeatureRecordById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the geo-resource dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - georesources
      summary: Modify/Update the feature record of the selected georesource dataset
        feature
      description: Modify/Update the feature record of the selected georesource dataset
        feature
      operationId: updateGeoresourceFeatureRecordAsBody
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the geo-resource dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      requestBody:
        description: georesource feature record data
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: georesourceFeatureRecordData
    delete:
      tags:
        - georesources
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected geo-resource dataset
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected geo-resource dataset
      operationId: deleteSingleGeoresourceFeatureRecordById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the geo-resource dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/{year}/{month}/{day}:
    get:
      tags:
        - georesources
      summary: retrieve the features according to the selected geo-resource dataset
        and selected year and month as GeoJSON
      description: retrieve the features according to the selected geo-resource dataset
        and selected year and month as GeoJSON
      operationId: getGeoresourceByIdAndYearAndMonth
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - georesources
      summary: "Delete the features/contents of the selected geo-resource dataset,\
        \ selected by year and month"
      description: "Delete the features/contents of the selected geo-resource dataset,\
        \ selected by year and month"
      operationId: deleteGeoresourceByIdAndYearAndMonth
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /georesources/{georesourceId}/{year}/{month}/{day}/without-geometry:
    get:
      tags:
        - georesources
      summary: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      description: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      operationId: getGeoresourceByIdAndYearAndMonthWithoutGeometry
      parameters:
        - name: georesourceId
          in: path
          description: georesourceId
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year
          required: true
          schema:
            type: number
          example: 0
        - name: month
          in: path
          description: month
          required: true
          schema:
            type: number
          example: 0
        - name: day
          in: path
          description: day
          required: true
          schema:
            type: number
          example: 0
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators:
    get:
      tags:
        - indicators
      summary: retrieve information about available indicators
      description: retrieve information about available indicators
      operationId: getIndicators
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorOverviewType'

        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    post:
      tags:
        - indicators
      summary: Add a new indicator dataset
      description: Add/Register an indicator dataset for a certain period of time
        and spatial unit/level
      operationId: addIndicatorAsBody
      requestBody:
        description: indicator data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorPOSTInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IndicatorOverviewType'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/IndicatorOverviewType'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: indicatorData
  /indicators/display-order:
    patch:
      tags:
        - indicators
      summary: Update displayOrder for submitted indicators
      description: Update displayOrder for submitted indicators
      operationId: updateIndicatorDisplayOrder
      requestBody:
        description: array of indicator id and displayOrder items
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IndicatorPATCHDisplayOrderInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: indicatorOrderArray
  /indicators/{indicatorId}:
    get:
      tags:
        - indicators
      summary: retrieve information about the selected indicator
      description: retrieve information about the selected indicator
      operationId: getIndicatorById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - indicators
      summary: Modify/Update the contents of the selected indicator dataset
      description: Modify/Update the contents of the selected indicator dataset
      operationId: updateIndicatorAsBody
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      requestBody:
        description: indicator data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorPUTInputType'
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: indicatorData
    delete:
      tags:
        - indicators
      summary: Delete the features/contents of the selected indicator dataset
      description: Delete the features/contents of the selected indicator dataset
      operationId: deleteIndicatorById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    patch:
      tags:
        - indicators
      summary: Modify/Update the metadata of the selected indicator dataset
      description: Modify/Update the metadata of the selected indicator dataset. This
        replaces the formerly stored metadata.
      operationId: updateIndicatorMetadataAsBody
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      requestBody:
        description: metadata input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorMetadataPATCHInputType'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: metadata
  /indicators/{indicatorId}/permissions:
    get:
      tags:
        - indicators
      summary: retrieve information about the permissions for the selected indicator
        dataset
      description: retrieve information about the permissions for the selected indicator
        dataset
      operationId: getIndicatorPermissionsById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionLevelType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}:
    get:
      tags:
        - indicators
      summary: retrieve the indicator for the selected spatial unit as GeoJSON
      description: retrieve the indicator for the selected spatial unit as GeoJSON
      operationId: getIndicatorBySpatialUnitIdAndId
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: "Controls simplification of feature geometries. Each option will\
            \ preserve topology to neighbour features. Simplification increases from\
            \ 'weak' to 'strong', while 'original' will return original feature geometries\
            \ without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - indicators
      summary: Delete the features/contents of the selected indicator dataset for
        the selected spatial unit
      description: Delete the features/contents of the selected indicator dataset
        for the selected spatial unit
      operationId: deleteIndicatorByIdAndSpatialUnitId
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    patch:
      tags:
        - indicators
      summary: Modify/Update the selected indicator dataset
      operationId: updateIndicatorRoles
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      requestBody:
        description: Indicator parameters input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorPATCHInputType'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: indicatorData
  /indicators/{indicatorId}/{spatialUnitId}/permissions:
    get:
      tags:
        - indicators
      summary: retrieve information about the permissions for the selected indicator
        and spatial unit dataset
      description: retrieve information about the permissions for the selected indicator
        and spatial unit dataset
      operationId: getIndicatorPermissionsBySpatialUnitIdAndId
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionLevelType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}:
    get:
      tags:
        - indicators
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      operationId: getSingleIndicatorFeatureById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset spatial feature
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: "Controls simplification of feature geometries. Each option will\
            \ preserve topology to neighbour features. Simplification increases from\
            \ 'weak' to 'strong', while 'original' will return original feature geometries\
            \ without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - indicators
      summary: Delete all database records for the specified feature of the selected
        indicator dataset
      description: Delete all database records for the specified feature of the selected
        indicator dataset
      operationId: deleteSingleIndicatorFeatureById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset spatial feature
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - indicators
      summary: retrieve single feature database record specified by its unique database
        primary key id test
      description: retrieve single feature database record specified by its unique
        database primary key id test
      operationId: getSingleIndicatorFeatureRecordById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset spatial feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the indicator dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: "Controls simplification of feature geometries. Each option will\
            \ preserve topology to neighbour features. Simplification increases from\
            \ 'weak' to 'strong', while 'original' will return original feature geometries\
            \ without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - indicators
      summary: Modify/Update the feature record of the selected indicator dataset
        feature
      description: Modify/Update the feature record of the selected indicator dataset
        feature
      operationId: updateIndicatorFeatureRecordAsBody
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the indicator dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      requestBody:
        description: indicator feature record data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: indicatorFeatureRecordData
    delete:
      tags:
        - indicators
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected indicator dataset
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected indicator dataset
      operationId: deleteSingleIndicatorFeatureRecordById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the indicator dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}/without-geometry:
    get:
      tags:
        - indicators
      summary: retrieve the indicator values and other properties for the selected
        spatial unit. It does not include the spatial geometries!
      description: retrieve the indicator values and other properties for the selected
        spatial unit. It does not include the spatial geometries!
      operationId: getIndicatorBySpatialUnitIdAndIdWithoutGeometry
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}:
    get:
      tags:
        - indicators
      summary: "retrieve the indicator for the selected spatial unit, year and month\
        \ as GeoJSON"
      description: "retrieve the indicator for the selected spatial unit, year and\
        \ month as GeoJSON"
      operationId: getIndicatorBySpatialUnitIdAndIdAndYearAndMonth
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - indicators
      summary: Delete the features/contents of the selected indicator dataset, selected
        by year and month
      description: Delete the features/contents of the selected indicator dataset,
        selected by year and month
      operationId: deleteIndicatorByIdAndYearAndMonth
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}/without-geometry:
    get:
      tags:
        - indicators
      summary: retrieve the indicator values and other properties for the selected
        spatial unit, year and month. It does not include the spatial geometries!
      description: retrieve the indicator values and other properties for the selected
        spatial unit, year and month. It does not include the spatial geometries!
      operationId: getIndicatorBySpatialUnitIdAndIdAndYearAndMonthWithoutGeometry
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /organizationalUnits:
    get:
      tags:
        - access-control
      summary: Retrieve information about available organizationalUnits
      description: retrieve information about available organizationalUnits
      operationId: getOrganizationalUnits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationalUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    post:
      tags:
        - access-control
      summary: Register a new organizationalUnit and create corresponding Roles
      description: Add/Register a organizationalUnit and create corresponding Roles
      operationId: addOrganizationalUnit
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationalUnitInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: organizationalUnitData
  /organizationalUnits/{organizationalUnitId}:
    get:
      tags:
        - access-control
      summary: Retrieve information about selected organizationalUnit
      description: retrieve information about selected organizationalUnit
      operationId: getOrganizationalUnitById
      parameters:
        - name: organizationalUnitId
          in: path
          description: organizationalUnitId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - access-control
      summary: Modify organizationalUnit information
      description: Modify organizationalUnit information
      operationId: updateOrganizationalUnit
      parameters:
        - name: organizationalUnitId
          in: path
          description: organizationalUnitId
          required: true
          schema:
            type: string
      requestBody:
        description: roleData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationalUnitInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: inputData
    delete:
      tags:
        - access-control
      summary: Delete the organizationalUnit and its associated roles
      description: Delete the organizationalUnit and its associated roles
      operationId: deleteOrganizationalUnit
      parameters:
        - name: organizationalUnitId
          in: path
          description: organizationalUnitId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /process-scripts:
    get:
      tags:
        - process-scripts
      summary: retrieve information about available process scripts
      description: retrieve information about available process scripts
      operationId: getProcessScripts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    post:
      tags:
        - process-scripts
      summary: Register a new process script
      description: Register a process script associated to a certain indicator
      operationId: addProcessScriptAsBody
      requestBody:
        description: details necessary to register the process script
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessScriptPOSTInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: processScriptData
  /process-scripts/template:
    get:
      tags:
        - process-scripts
      summary: retrieve an empty script template, that defines how to implement process
        scripts for KomMonitor as JavaScript file.
      description: retrieve an empty script template, that defines how to implement
        process scripts for KomMonitor. The script works as a template for a NodeJS
        module. Hence, it predefines required methods that are called by the executing
        processing engine (a NodeJS runtimne environment). As a script developer,
        those predefined methods have to be implemented. The template contains detailed
        documentation on how to implement those methods.
      operationId: getProcessScriptTemplate
      responses:
        "200":
          description: OK
          content:
            application/javascript:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /process-scripts/usingIndicatorId/{indicatorId}:
    get:
      tags:
        - process-scripts
      summary: retrieve information about the associated process script for a certain
        indicator
      description: retrieve information about the associated process script for a
        certain indicator
      operationId: getProcessScriptForIndicator
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - process-scripts
      summary: Modify/Update an existing process script
      description: Modify/Update an existing process script associated to a certain
        indicator
      operationId: updateProcessScriptAsBody
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      requestBody:
        description: details necessary to modify the process script
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessScriptPUTInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: processScriptData
    delete:
      tags:
        - process-scripts
      summary: Delete the process script
      description: Delete the process script associated to the specified indicator
      operationId: deleteProcessScript
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /process-scripts/usingIndicatorId/{indicatorId}/scriptCode:
    get:
      tags:
        - process-scripts
      summary: retrieve the process script code associated to a certain indicator
        as JavaScript file
      description: retrieve the process script code associated to a certain indicator
        as JavaScript file
      operationId: getProcessScriptCodeForIndicator
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/javascript:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /process-scripts/{scriptId}:
    get:
      tags:
        - process-scripts
      summary: retrieve information about the associated process script for a certain
        scriptId
      description: retrieve information about the associated process script for a
        certain scriptId
      operationId: getProcessScriptForScriptId
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - process-scripts
      summary: Modify/Update an existing process script
      description: Modify/Update an existing process script associated to a certain
        scriptId
      operationId: updateProcessScriptAsBodyByScriptId
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      requestBody:
        description: details necessary to modify the process script
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessScriptPUTInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: processScriptData
    delete:
      tags:
        - process-scripts
      summary: Delete the process script
      description: Delete the process script associated to the specified scriptId
      operationId: deleteProcessScriptByScriptId
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /process-scripts/{scriptId}/scriptCode:
    get:
      tags:
        - process-scripts
      summary: retrieve the process script code associated to a certain indicator
        as JavaScript file
      description: retrieve the process script code associated to a certain indicator
        as JavaScript file
      operationId: getProcessScriptCode
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/javascript:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/database/last-modification:
    get:
      tags:
        - database-public
      summary: retrieve last modification information for all resources
      description: retrieve last modification information for all resources
      operationId: getLastModification
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastModificationOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources:
    get:
      tags:
        - georesources-public
      summary: retrieve information about available features of different public geo-resource
        datasets
      description: retrieve information about available features of different public
        geo-resource datasets
      operationId: getPublicGeoresources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeoresourceOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}:
    get:
      tags:
        - georesources-public
      summary: retrieve information about available features of the selected public
        geo-resource dataset
      description: retrieve information about available features of the selected public
        geo-resource dataset
      operationId: getPublicGeoresourceById
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the public geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoresourceOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/allFeatures:
    get:
      tags:
        - georesources-public
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected public geo-resource dataset (hence might contain each feature
        multiple times if they exist for different periods of validity)
      description: retrieve all feature entries for all applicable periods of validity
        for the selected public geo-resource dataset (hence might contain each feature
        multiple times if they exist for different periods of validity)
      operationId: getAllPublicGeoresourceFeaturesById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the public geo-resource dataset
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification."
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/allFeatures/without-geometry:
    get:
      tags:
        - georesources-public
      summary: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      description: retrieve only the properties without geometry of all feature entries
        for all applicable periods of validity for the selected public geo-resource
        dataset (hence might contain each feature multiple times if they exist for
        different periods of validity)
      operationId: getAllPublicGeoresourceFeaturesByIdWithoutGeometry
      parameters:
        - name: georesourceId
          in: path
          description: georesourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/schema:
    get:
      tags:
        - georesources-public
      summary: retrieve the JSON schema for the selected public geo-resource dataset
      description: retrieve the JSON schema for the selected public geo-resource dataset.
        The JSON schema indicates the property structure of the dataset.
      operationId: getPublicGeoresourceSchemaByLevel
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the public geo-resource dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/singleFeature/{featureId}:
    get:
      tags:
        - georesources-public
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected geo-resource dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleGeoresourceFeatureById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - georesources-public
      summary: retrieve single feature database record specified by its unique database
        primary key id
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleGeoresourceFeatureRecordById
      parameters:
        - name: georesourceId
          in: path
          description: the identifier of the geo-resource dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the geo-resource dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the geo-resource dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/{year}/{month}/{day}:
    get:
      tags:
        - georesources-public
      summary: retrieve the features according to the selected public geo-resource
        dataset and selected year and month as GeoJSON
      description: retrieve the features according to the selected public geo-resource
        dataset and selected year and month as GeoJSON
      operationId: getPublicGeoresourceByIdAndYearAndMonth
      parameters:
        - name: georesourceId
          in: path
          description: identifier of the public geo-resource dataset
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/georesources/{georesourceId}/{year}/{month}/{day}/without-geometry:
    get:
      tags:
        - georesources-public
      summary: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      description: retrieve only the properties without geometry of the features according
        to the selected public geo-resource dataset and selected year and month as
        GeoJSON
      operationId: getPublicGeoresourceByIdAndYearAndMonthWithoutGeometry
      parameters:
        - name: georesourceId
          in: path
          description: georesourceId
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators:
    get:
      tags:
        - indicators-public
      summary: retrieve information about available public indicators
      description: retrieve information about available public indicators
      operationId: getPublicIndicators
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}:
    get:
      tags:
        - indicators-public
      summary: retrieve information about the selected public indicator
      description: retrieve information about the selected public indicator
      operationId: getPublicIndicatorById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected public indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}:
    get:
      tags:
        - indicators-public
      summary: retrieve the public indicator for the selected spatial unit as GeoJSON
      description: retrieve the public indicator for the selected spatial unit as
        GeoJSON
      operationId: getPublicIndicatorBySpatialUnitIdAndId
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected public indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the public spatial level
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}:
    get:
      tags:
        - indicators-public
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected indicator dataset (hence might contain the target
        feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleIndicatorFeatureById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset spatial feature
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - indicators-public
      summary: retrieve single feature database record specified by its unique database
        primary key id
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleIndicatorFeatureRecordById
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the indicator dataset spatial feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the indicator dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}/without-geometry:
    get:
      tags:
        - indicators-public
      summary: retrieve the public indicator values and other properties for the selected
        public spatial unit. It does not include the spatial geometries!
      description: retrieve the public indicator values and other properties for the
        selected public spatial unit. It does not include the spatial geometries!
      operationId: getPublicIndicatorBySpatialUnitIdAndIdWithoutGeometry
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected public indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the public spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}:
    get:
      tags:
        - indicators-public
      summary: "retrieve the public indicator for the selected public spatial unit,\
        \ year and month as GeoJSON"
      description: "retrieve the public indicator for the selected spatial unit, year\
        \ and month as GeoJSON"
      operationId: getPublicIndicatorBySpatialUnitIdAndIdAndYearAndMonth
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected public indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the public spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/indicators/{indicatorId}/{spatialUnitId}/{year}/{month}/{day}/without-geometry:
    get:
      tags:
        - indicators-public
      summary: retrieve the public indicator values and other properties for the
        selected public spatial unit, year and month. It does not include the spatial
        geometries!
      description: retrieve the public indicator values and other properties for
        the selected public spatial unit, year and month. It does not include the
        spatial geometries!
      operationId: getPublicIndicatorBySpatialUnitIdAndIdAndYearAndMonthWithoutGeometry
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which the indicator shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndicatorPropertiesWithoutGeomType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/process-scripts:
    get:
      tags:
        - process-scripts-public
      summary: retrieve information about available process scripts associated to
        public indicators
      description: retrieve information about available process scripts associated
        to public indicators
      operationId: getPublicProcessScripts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/process-scripts/usingIndicatorId/{indicatorId}:
    get:
      tags:
        - process-scripts-public
      summary: retrieve information about the associated process script for a certain
        public indicator
      description: retrieve information about the associated process script for a
        certain indicator
      operationId: getProcessScriptForPublicIndicator
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected public indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/process-scripts/usingIndicatorId/{indicatorId}/scriptCode:
    get:
      tags:
        - process-scripts-public
      summary: retrieve the process script code associated to a certain public indicator
        as JavaScript file
      description: retrieve the process script code associated to a certain public
        indicator as JavaScript file
      operationId: getProcessScriptCodeForPublicIndicator
      parameters:
        - name: indicatorId
          in: path
          description: unique identifier of the selected indicator dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/javascript:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/process-scripts/{scriptId}:
    get:
      tags:
        - process-scripts-public
      summary: retrieve information about the associated process script for a certain
        scriptId associated to a public indicator
      description: retrieve information about the associated process script for a
        certain scriptId associated to a public indicator
      operationId: getPublicProcessScriptForScriptId
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessScriptOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/process-scripts/{scriptId}/scriptCode:
    get:
      tags:
        - process-scripts-public
      summary: retrieve the process script code associated to a certain public indicator
        as JavaScript file
      description: retrieve the process script code associated to a certain public
        indicator as JavaScript file
      operationId: getPublicProcessScriptCode
      parameters:
        - name: scriptId
          in: path
          description: unique identifier of the selected script
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/javascript:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units:
    get:
      tags:
        - spatial-units-public
      summary: retrieve information about available features of different spatial
        units/levels
      description: retrieve information about available features of different spatial
        units/levels
      operationId: getPublicSpatialUnits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpatialUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}:
    get:
      tags:
        - spatial-units-public
      summary: retrieve information about available features of the selected spatial
        unit/level
      description: retrieve information about available features of the selected spatial
        unit/level
      operationId: getPublicSpatialUnitsById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}/allFeatures:
    get:
      tags:
        - spatial-units-public
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      description: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllPublicSpatialUnitFeaturesById
      parameters:
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}/schema:
    get:
      tags:
        - spatial-units-public
      summary: retrieve the JSON schema for the selected spatial unit/level
      description: retrieve the JSON schema for the selected spatial unit/level. The
        JSON schema indicates the property structure of the dataset.
      operationId: getPublicSpatialUnitsSchemaById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}/singleFeature/{featureId}:
    get:
      tags:
        - spatial-units-public
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getPublicSingleSpatialUnitFeatureById
      parameters:
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - spatial-units-public
      summary: retrieve single feature database record specified by its unique database
        primary key id
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getPublicSingleSpatialUnitFeatureRecordById
      parameters:
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the spatial-unit dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/spatial-units/{spatialUnitId}/{year}/{month}/{day}:
    get:
      tags:
        - spatial-units-public
      summary: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      description: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      operationId: getPublicSpatialUnitsByIdAndYearAndMonth
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/topics:
    get:
      tags:
        - topics-public
      summary: retrieve information about available topics
      description: retrieve information about available topics
      operationId: getTopics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /public/topics/{topicId}:
    get:
      tags:
        - topics-public
      summary: retrieve information about the selected topic
      description: retrieve information about the selected topic
      operationId: getTopicById
      parameters:
        - name: topicId
          in: path
          description: unique identifier of the topic
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units:
    get:
      tags:
        - spatial-units
      summary: retrieve information about available features of different spatial
        units/levels
      description: retrieve information about available features of different spatial
        units/levels
      operationId: getSpatialUnits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpatialUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    post:
      tags:
        - spatial-units
      summary: Add a new spatial-unit
      description: Add/Register a spatial unit for a certain period of time
      operationId: addSpatialUnitAsBody
      requestBody:
        description: feature data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialUnitPOSTInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SpatialUnitOverviewType'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SpatialUnitOverviewType'
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: featureData
  /spatial-units/{spatialUnitId}:
    get:
      tags:
        - spatial-units
      summary: retrieve information about available features of the selected spatial
        unit/level
      description: retrieve information about available features of the selected spatial
        unit/level
      operationId: getSpatialUnitsById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialUnitOverviewType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - spatial-units
      summary: Modify/Update the features of the selected spatial-unit
      description: Modify/Update the features of the selected spatial-unit. The interface
        expects a full upload of all geometries for the spatial unit. Internally,
        those geometries are compared to the existing ones to mark 'old' geometries
        that are no longer in use as outdated. Hence, each geometric object is only
        persisted once and its use is controlled by time validity marks.
      operationId: updateSpatialUnitAsBody
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      requestBody:
        description: feature data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialUnitPUTInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: featureData
    delete:
      tags:
        - spatial-units
      summary: Delete the features/contents of the selected spatial-unit
      description: Delete the features/contents of the selected spatial-unit
      operationId: deleteSpatialUnitById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    patch:
      tags:
        - spatial-units
      summary: Modify/Update the metadata of the selected spatial-unit
      description: Modify/Update the metadata of the selected spatial-unit. This replaces
        the formerly stored metadata.
      operationId: updateSpatialUnitMetadataAsBody
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      requestBody:
        description: metadata input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialUnitPATCHInputType'
        required: true
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: metadata
  /spatial-units/{spatialUnitId}/allFeatures:
    get:
      tags:
        - spatial-units
      summary: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      description: retrieve all feature entries for all applicable periods of validity
        for the selected spatial unit/level (hence might contain each feature multiple
        times if they exist for different periods of validity)
      operationId: getAllSpatialUnitFeaturesById
      parameters:
        - name: simplifyGeometries
          in: query
          description: ontrols simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - spatial-units
      summary: Delete all features/contents of the selected spatial-unit dataset
      description: Delete all features/contents of the selected spatial-unit dataset
      operationId: deleteAllSpatialUnitFeaturesById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units/{spatialUnitId}/permissions:
    get:
      tags:
        - spatial-units
      summary: retrieve information about the permissions for the selected spatial
        unit dataset
      description: retrieve information about the permissions for the selected spatial
        unit dataset
      operationId: getSpatialUnitsPermissionsById
      parameters:
        - name: spatialUnitId
          in: path
          description: identifier of the spatial unit dataset
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionLevelType'
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units/{spatialUnitId}/schema:
    get:
      tags:
        - spatial-units
      summary: retrieve the JSON schema for the selected spatial unit/level
      description: retrieve the JSON schema for the selected spatial unit/level. The
        JSON schema indicates the property structure of the dataset.
      operationId: getSpatialUnitsSchemaById
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units/{spatialUnitId}/singleFeature/{featureId}:
    get:
      tags:
        - spatial-units
      summary: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      description: retrieve single feature database records for all applicable periods
        of validity for the selected spatial-unit dataset (hence might contain the
        target feature multiple times if it exists for different periods of validity)
      operationId: getSingleSpatialUnitFeatureById
      parameters:
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - spatial-units
      summary: Delete all database records for the specified feature of the selected
        spatial-unit dataset
      description: Delete all database records for the specified feature of the selected
        spatial-unit dataset
      operationId: deleteSingleSpatialUnitFeatureById
      parameters:
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units/{spatialUnitId}/singleFeature/{featureId}/singleFeatureRecord/{featureRecordId}:
    get:
      tags:
        - spatial-units
      summary: retrieve single feature database record specified by its unique database
        primary key id
      description: retrieve single feature database record specified by its unique
        database primary key id
      operationId: getSingleSpatialUnitFeatureRecordById
      parameters:
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the spatial-unit dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    put:
      tags:
        - spatial-units
      summary: Modify/Update the feature record of the selected spatial-unit dataset
        feature
      description: Modify/Update the feature record of the selected spatial-unit dataset
        feature
      operationId: updateSpatialUnitFeatureRecordAsBody
      parameters:
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the spatial-unit dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      requestBody:
        description: spatial-unit feature record data
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK - Updated
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: spatialUnitFeatureRecordData
    delete:
      tags:
        - spatial-units
      summary: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected spatial-unit dataset
      description: Delete single feature database record specified by its unique database
        primary key id for the specified feature of the selected spatial-unit dataset
      operationId: deleteSingleSpatialUnitFeatureRecordById
      parameters:
        - name: spatialUnitId
          in: path
          description: the identifier of the spatial-unit dataset
          required: true
          schema:
            type: string
        - name: featureId
          in: path
          description: the identifier of the spatial-unit dataset feature
          required: true
          schema:
            type: string
        - name: featureRecordId
          in: path
          description: the unique database record identifier of the spatial-unit dataset
            feature - multiple records may exist for the same real world object if they
            apply to different periods of validity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /spatial-units/{spatialUnitId}/{year}/{month}/{day}:
    get:
      tags:
        - spatial-units
      summary: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      description: retrieve the features according to the selected spatial unit/level
        and selected year and month as GeoJSON
      operationId: getSpatialUnitsByIdAndYearAndMonth
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: simplifyGeometries
          in: query
          description: Controls simplification of feature geometries. Each option will
            preserve topology to neighbour features. Simplification increases from
            'weak' to 'strong', while 'original' will return original feature geometries
            without any simplification.
          allowEmptyValue: false
          schema:
            type: string
            default: original
            enum:
              - original
              - weak
              - medium
              - strong
      responses:
        "200":
          description: OK
          content:
            application/octed-stream:
              schema:
                type: string
                format: byte
        "400":
          description: Invalid status value
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
    delete:
      tags:
        - spatial-units
      summary: "Delete the features/contents of the selected spatial-unit, year and\
        \ month"
      description: "Delete the features/contents of the selected spatial-unit, year\
        \ and month"
      operationId: deleteSpatialUnitByIdAndYearAndMonth
      parameters:
        - name: spatialUnitId
          in: path
          description: the unique identifier of the spatial level
          required: true
          schema:
            type: string
        - name: year
          in: path
          description: year for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: month
          in: path
          description: month for which datasets shall be queried
          required: true
          schema:
            type: number
        - name: day
          in: path
          description: day for which datasets shall be queried
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
  /topics:
    post:
      tags:
        - topics
      summary: Register a new topic
      description: Add/Register a topic
      operationId: addTopic
      requestBody:
        description: topic input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicInputType'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TopicOverviewType'
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TopicOverviewType'
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: topicData
  /topics/{topicId}:
    put:
      tags:
        - topics
      summary: Modify topic information
      description: Modify topic information
      operationId: updateTopic
      parameters:
        - name: topicId
          in: path
          description: unique identifier of the topic
          required: true
          schema:
            type: string
      requestBody:
        description: topic input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicInputType'
        required: true
      responses:
        "200":
          description: OK
        "201":
          description: Created
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "405":
          description: Invalid input
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
      x-codegen-request-body-name: topicData
    delete:
      tags:
        - topics
      summary: Delete the topic
      description: Delete the topic
      operationId: deleteTopic
      parameters:
        - name: topicId
          in: path
          description: unique identifier of the topic
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
          content: {}
        "401":
          description: API key is missing or invalid
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - kommonitor-data-access_oauth: []
components:
  schemas:
    CommonMetadataType:
      title: CommonMetadataType
      required:
        - contact
        - datasource
        - description
        - sridEPSG
        - updateInterval
      type: object
      properties:
        contact:
          type: string
          description: contact details where additional information can be achieved
        databasis:
          type: string
          description: information about data used as a basis to generate the dataset
        datasource:
          type: string
          description: information about the origin/source of the dataset
        description:
          type: string
          description: description of the dataset
        lastUpdate:
          type: string
          description: a timestamp representing the lastUpdate according to ISO 8601
            (e.g. 2018-01-30)
          format: date
        literature:
          type: string
          description: an optional hint to literature about the dataset (e.g. URL
            or book/article name)
        note:
          type: string
          description: an optional note with background information about the dataset
        sridEPSG:
          type: number
          description: the coordinate reference system of the dataset as EPSG code
          example: 0.0
        updateInterval:
          type: string
          enum:
            - ARBITRARY
            - MONTHLY
            - QUARTERLY
            - HALF_YEARLY
            - YEARLY
            - DAILY
            - WEEKLY
    DefaultClassificationMappingItemType:
      title: DefaultClassificationMappingItemType
      required:
        - defaultColorAsHex
        - defaultCustomRating
      type: object
      properties:
        defaultColorAsHex:
          type: string
          description: the default color for the specified value interval as hex
            string inclusive leading '#', i.e. '#ffffff'
        defaultCustomRating:
          type: string
          description: the default custom rating string for the specified value interval,\
            \ i.e. 'very high'/'very low' or 'good'/'bad'"
    DefaultClassificationMappingType:
      title: DefaultClassificationMappingType
      required:
        - colorBrewerSchemeName
        - items
      type: object
      properties:
        colorBrewerSchemeName:
          type: string
          description: the name of the colorBrewer color scheme used to define the
            colors for classification (see project http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3
            for colorSchemes). Set to 'INDIVIDUAL' if colors are set arbitrarily.
        items:
          type: array
          description: array of classification mapping items. The order of the items
            corresponds to indicator value intervals from low to high. The number
            of items represents the number of classes. In combination they represent
            the default classification and mapping to custom rating of the indicator
            values
          items:
            $ref: '#/components/schemas/DefaultClassificationMappingItemType'
    GeoresourceOverviewType:
      title: GeoresourceOverviewType
      required:
        - availablePeriodsOfValidity
        - datasetName
        - georesourceId
        - isAOI
        - isLOI
        - isPOI
        - metadata
        - topicReference
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        aoiColor:
          type: string
          description: color name or color code (i.e. hex number) for areas of interest
        availablePeriodsOfValidity:
          type: array
          items:
            $ref: '#/components/schemas/PeriodOfValidityType'
        datasetName:
          type: string
          description: the meaningful name of the dataset
        georesourceId:
          type: string
          description: the unique identifier of the dataset
        isAOI:
          type: boolean
          description: boolean value indicating if the dataset contains areas of interest
        isLOI:
          type: boolean
          description: boolean value indicating if the dataset contains lines of interest
        isPOI:
          type: boolean
          description: boolean value indicating if the dataset contains points of
            interest
        loiColor:
          type: string
          description: color name or color code (i.e. hex number) for lines of interest
        loiDashArrayString:
          type: string
          description: sring of line stroke dash array for lines of interest (e.g.
            20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)
        loiWidth:
          type: number
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        poiMarkerColor:
          description: If georesource is a POI then custom POI marker color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        poiSymbolBootstrap3Name:
          type: string
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
        poiSymbolColor:
          description: If georesource is a POI then custom POI symbol color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        topicReference:
          type: string
          description: 'id of the last topic hierarchy entity '
        userPermissions:
          type: array
          description: 'list of permissions that are effective on this dataset for
            the current user '
          items:
            $ref: '#/components/schemas/PermissionLevelType'
        wfsUrl:
          type: string
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
        wmsUrl:
          type: string
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
    GeoresourcePATCHInputType:
      title: GeoresourcePATCHInputType
      required:
        - metadata
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        aoiColor:
          type: string
          description: color name or color code (i.e. hex number) for areas of interest
        datasetName:
          type: string
          description: the meaningful name of the dataset
        isAOI:
          type: boolean
          description: boolean value indicating if the dataset contains areas of interest
        isLOI:
          type: boolean
          description: boolean value indicating if the dataset contains lines of interest
        isPOI:
          type: boolean
          description: boolean value indicating if the dataset contains points of
            interest
        loiColor:
          type: string
          description: color name or color code (i.e. hex number) for lines of interest
        loiDashArrayString:
          type: string
          description: string of line stroke dash array for lines of interest (e.g.
            20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)
        loiWidth:
          type: number
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        poiMarkerColor:
          description: If georesource is a POI then custom POI marker color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        poiSymbolBootstrap3Name:
          type: string
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
        poiSymbolColor:
          description: If georesource is a POI then custom POI symbol color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        topicReference:
          type: string
          description: 'id of the last topic hierarchy entity '
    GeoresourcePOSTInputType:
      title: GeoresourcePOSTInputType
      required:
        - datasetName
        - metadata
        - periodOfValidity
        - isPOI
        - isLOI
        - isAOI
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        aoiColor:
          type: string
          description: color name or color code (i.e. hex number) for areas of interest
        datasetName:
          type: string
          description: the meaningful name of the dataset
        geoJsonString:
          type: string
          description: a valid GeoJSON string containing the features consisting of
            a geometry and properties specific to the dataset
        isAOI:
          type: boolean
          description: boolean value indicating if the dataset contains areas of interest
        isLOI:
          type: boolean
          description: boolean value indicating if the dataset contains lines of interest
        isPOI:
          type: boolean
          description: boolean value indicating if the dataset contains points of
            interest
        jsonSchema:
          type: string
          description: a JSON schema as string that defines the data model for this
            dataset. It can be used to validate the geoJsonString property.
        loiColor:
          type: string
          description: color name or color code (i.e. hex number) for lines of interest
        loiDashArrayString:
          type: string
          description: sring of line stroke dash array for lines of interest (e.g.
            20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)
        loiWidth:
          type: number
          description: display width for lines of interest (number of pixels in leaflet)
          example: 0.0
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        periodOfValidity:
          $ref: '#/components/schemas/PeriodOfValidityType'
        poiMarkerColor:
          description: If georesource is a POI then custom POI marker color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        poiSymbolBootstrap3Name:
          type: string
          description: If georesource is a POI then custom POI marker symbol can be
            set by specifying the name of a Bootstrap 3 glyphicon symbol (i.e. "home"
            for a home symbol or "education" for a students hat symbol)
        poiSymbolColor:
          description: If georesource is a POI then custom POI symbol color can be
            set by specifying one of the following color names
          $ref: '#/components/schemas/ColorType'
        topicReference:
          type: string
          description: id of the last topic hierarchy entity
    GeoresourcePUTInputType:
      title: GeoresourcePUTInputType
      required:
        - geoJsonString
        - periodOfValidity
      type: object
      properties:
        geoJsonString:
          type: string
          description: a valid GeoJSON string containing the features consisting of
            a geometry and properties specific to the dataset
        isPartialUpdate:
          type: boolean
          description: if set to TRUE, then a partial upload of geometries is possible.
            Missing features that are already in the database will then not be deleted
        periodOfValidity:
          $ref: '#/components/schemas/PeriodOfValidityType'
    GeoresourceReferenceType:
      title: GeoresourceReferenceType
      required:
        - referencedGeoresourceDescription
        - referencedGeoresourceId
        - referencedGeoresourceName
      type: object
      properties:
        referencedGeoresourceDescription:
          type: string
          description: a meaningful description of how the referenced georesource
            is related to the main indicator
        referencedGeoresourceId:
          type: string
          description: unique identifier of the referenced georesource
        referencedGeoresourceName:
          type: string
          description: the meaningful name of the referenced georesource
      description: "a reference to georesource, e.g. a resource that is used to compute\
        \ the main indicator"
    IndicatorMetadataPATCHInputType:
      title: IndicatorMetadataPATCHInputType
      required:
        - abbreviation
        - allowedRoles
        - interpretation
        - isHeadlineIndicator
        - metadata
        - processDescription
        - tags
        - topicReference
        - unit
      type: object
      properties:
        abbreviation:
          type: string
          description: abbreviated mark of the indicator
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        characteristicValue:
          type: string
          description: the distuingishing characteristic value of the indicator
        creationType:
          description: indicates if the data is simply inserted (INSERTION), computed
            by an automated script (COMPUTATION) or automatically aggregated by
            a script (AGGREGATION)
          $ref: '#/components/schemas/CreationTypeEnum'
        datasetName:
          type: string
          description: the meaningful name of the indicator
        defaultClassificationMapping:
          $ref: '#/components/schemas/DefaultClassificationMappingType'
        displayOrder:
          type: number
          description: an order number to control display order in clients
          example: 0.0
        indicatorType:
          description: indicates whether the indicator is a status indicator (values
            represent the extent of the watched phenomenon for a certain point in
            time) or a dynamic indicator (values represent the change of extent of
            the watched phenomenon within a certain period of time)
          $ref: '#/components/schemas/IndicatorTypeEnum'
        interpretation:
          type: string
          description: interpretation of the indicator values
        isHeadlineIndicator:
          type: boolean
          description: boolean value indicating if the indicator is a headline indicator
        lowestSpatialUnitForComputation:
          type: string
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        processDescription:
          type: string
          description: description about how the indicator was computed
        referenceDateNote:
          type: string
          description: an optional note on the reference date of the indicator
        refrencesToGeoresources:
          type: array
          description: array of references to other georesource datasets. E.g., if
            an indicator is defined by performing geometric-topological operations,
            then the identifiers of those required georesources can be referenced
            here
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeRefrencesToGeoresources'
        refrencesToOtherIndicators:
          type: array
          description: array of references to other indicators. E.g., if an indicator
            is defined by combining four other indicators, then the identifiers
            of those four indicators can be referenced here
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeRefrencesToOtherIndicators'
        tags:
          type: array
          description: list of tag labels for the indicator
          items:
            type: string
        topicReference:
          type: string
          description: 'id of the last topic hierarchy entity '
        unit:
          type: string
          description: unit of the indicator values
    IndicatorOverviewType:
      title: IndicatorOverviewType
      required:
        - abbreviation
        - applicableDates
        - applicableSpatialUnits
        - characteristicValue
        - creationType
        - indicatorId
        - indicatorName
        - interpretation
        - isHeadlineIndicator
        - metadata
        - ogcServices
        - processDescription
        - tags
        - topicReference
        - unit
      type: object
      properties:
        abbreviation:
          type: string
          description: abbreviated mark of the indicator
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        applicableDates:
          type: array
          description: array of applicable dates (year and month and day as YEAR-MONTH-DAY)
            according to ISO 8601 (e.g. 2018-01-30)
          items:
            type: string
        applicableSpatialUnits:
          type: array
          description: array of spatial unit levels for which the dataset is applicable
          items:
            $ref: '#/components/schemas/IndicatorSpatialUnitJoinItem'
        characteristicValue:
          type: string
          description: the distuingishing characteristic value of the indicator
        creationType:
          description: indicates if the data is simply inserted (INSERTION), computed
            by an automated script (COMPUTATION) or automatically aggregated by
            a script (AGGREGATION)"
          $ref: '#/components/schemas/CreationTypeEnum'
        defaultClassificationMapping:
          $ref: '#/components/schemas/DefaultClassificationMappingType'
        displayOrder:
          type: number
          description: an order number to control display order in clients
          example: 0.0
        indicatorId:
          type: string
          description: unique identifier of this resource
        indicatorName:
          type: string
          description: name of the indicator
        indicatorType:
          description: indicates whether the indicator is a status indicator (values
            represent the extent of the watched phenomenon for a certain point in
            time) or a dynamic indicator (values represent the change of extent of
            the watched phenomenon within a certain period of time)
          $ref: '#/components/schemas/IndicatorTypeEnum'
        interpretation:
          type: string
          description: interpretation of the indicator values
        isHeadlineIndicator:
          type: boolean
          description: boolean value indicating if the indicator is a headline indicator
        lowestSpatialUnitForComputation:
          type: string
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        ogcServices:
          type: array
          description: list of available OGC services for that indicator for different
            spatial units
          items:
            $ref: '#/components/schemas/OgcServicesType'
        processDescription:
          type: string
          description: description about how the indicator was computed
        referenceDateNote:
          type: string
          description: an optional note on the reference date of the indicator
        referencedGeoresources:
          type: array
          description: list of references to georesources
          items:
            $ref: '#/components/schemas/GeoresourceReferenceType'
        referencedIndicators:
          type: array
          description: list of references to other indicators
          items:
            $ref: '#/components/schemas/IndicatorReferenceType'
        tags:
          type: array
          description: list of tag labels for the indicator
          items:
            type: string
        topicReference:
          type: string
          description: 'id of the last topic hierarchy entity '
        unit:
          type: string
          description: unit of the indicator values
        userPermissions:
          type: array
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: '#/components/schemas/PermissionLevelType'
    IndicatorPATCHDisplayOrderInputType:
      title: IndicatorPATCHDisplayOrderInputType
      required:
        - displayOrder
        - indicatorId
      type: object
      properties:
        displayOrder:
          type: number
          description: the new displayOrder value
          example: 0.0
        indicatorId:
          type: string
          description: unique ID of the associated indicator
    IndicatorPATCHInputType:
      title: IndicatorPATCHInputType
      required:
        - allowedRoles
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
    IndicatorPOSTInputType:
      title: IndicatorPOSTInputType
      required:
        - abbreviation
        - allowedRoles
        - characteristicValue
        - creationType
        - datasetName
        - defaultClassificationMapping
        - interpretation
        - isHeadlineIndicator
        - metadata
        - processDescription
        - tags
        - topicReference
        - unit
      type: object
      properties:
        abbreviation:
          type: string
          description: abbreviated mark of the indicator
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        characteristicValue:
          type: string
          description: the distuingishing characteristic value of the indicator
        creationType:
          description: indicates if the data is simply inserted (INSERTION), computed
            by an automated script (COMPUTATION) or automatically aggregated by
            a script (AGGREGATION)
          $ref: '#/components/schemas/CreationTypeEnum'
        datasetName:
          type: string
          description: the meaningful name of the indicator
        defaultClassificationMapping:
          $ref: '#/components/schemas/DefaultClassificationMappingType'
        displayOrder:
          type: number
          description: an order number to control display order in clients
          example: 0.0
        indicatorType:
          description: indicates whether the indicator is a status indicator (values
            represent the extent of the watched phenomenon for a certain point in
            time) or a dynamic indicator (values represent the change of extent of
            the watched phenomenon within a certain period of time)
          $ref: '#/components/schemas/IndicatorTypeEnum'
        interpretation:
          type: string
          description: interpretation of the indicator values
        isHeadlineIndicator:
          type: boolean
          description: boolean value indicating if the indicator is a headline indicator
        lowestSpatialUnitForComputation:
          type: string
          description: identifier/name of the lowest spatial unit for which the indicator
            can be computed and thus is available (only necessary for computable indicators)
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        processDescription:
          type: string
          description: description about how the indicator was computed
        referenceDateNote:
          type: string
          description: an optional note on the reference date of the indicator
        refrencesToGeoresources:
          type: array
          description: array of references to other georesource datasets. E.g., if
            an indicator is defined by performing geometric-topological operations,
            then the identifiers of those required georesources can be referenced
            here
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeRefrencesToGeoresources'
        refrencesToOtherIndicators:
          type: array
          description: array of references to other indicators. E.g., if an indicator
            is defined by combining four other indicators, then the identifiers
            of those other indicators can be referenced here
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeRefrencesToOtherIndicators'
        tags:
          type: array
          description: list of tag labels for the indicator
          items:
            type: string
        topicReference:
          type: string
          description: 'id of the last topic hierarchy entity '
        unit:
          type: string
          description: unit of the indicator values
    IndicatorPOSTInputTypeIndicatorValues:
      title: IndicatorPOSTInputTypeIndicatorValues
      type: object
      properties:
        spatialReferenceKey:
          type: string
          description: identifier (uuid) of the spatial feature to which the values
            shall be applied
        valueMapping:
          type: array
          description: an array of entries mapping an indicator value to a timestamp
            as mapping key
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeValueMapping'
    IndicatorPOSTInputTypeRefrencesToGeoresources:
      title: IndicatorPOSTInputTypeRefrencesToGeoresources
      type: object
      properties:
        georesourceId:
          type: string
          description: identifier of the referenced georesource
        referenceDescription:
          type: string
          description: short description of how the georesource is referenced to the
            indicator
    IndicatorPOSTInputTypeRefrencesToOtherIndicators:
      title: IndicatorPOSTInputTypeRefrencesToOtherIndicators
      type: object
      properties:
        indicatorId:
          type: string
          description: identifier of the referenced indicator
        referenceDescription:
          type: string
          description: short description of how the indicator is referenced to the
            superior one
    IndicatorPOSTInputTypeValueMapping:
      title: IndicatorPOSTInputTypeValueMapping
      type: object
      properties:
        indicatorValue:
          type: number
          description: the numeric extent of the indicator for the timestamp
          format: float
          example: 0.0
        timestamp:
          type: string
          description: timestamp consisting of year, month and day according to ISO
            8601 (e.g. 2018-01-30)
          format: date
    IndicatorPUTInputType:
      title: IndicatorPUTInputType
      required:
        - allowedRoles
        - applicableSpatialUnit
        - indicatorValues
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        applicableSpatialUnit:
          type: string
        defaultClassificationMapping:
          $ref: '#/components/schemas/DefaultClassificationMappingType'
        indicatorValues:
          type: array
          description: an array of entries containing indicator values and mapping
            to spatial features via identifiers
          items:
            $ref: '#/components/schemas/IndicatorPOSTInputTypeIndicatorValues'
    IndicatorPropertiesWithoutGeomType:
      title: IndicatorPropertiesWithoutGeomType
      type: object
      required:
        - id
        - name
        - validStartDate
        - validEndDate
      properties:
        id:
          type: string
          description: the id of the spatial feature
        name:
          type: string
          description: the name of the spatial feature
        validStartDate:
          type: string
          description: the start date from which on the spatial feature is valid
        validEndDate:
          type: string
          description: the end date until the spatial feature is valid - or null if not set
    IndicatorReferenceType:
      title: IndicatorReferenceType
      required:
        - referencedIndicatorDescription
        - referencedIndicatorId
        - referencedIndicatorName
      type: object
      properties:
        referencedIndicatorDescription:
          type: string
          description: a meaningful description of how the referenced indicator is
            related to the main indicator
        referencedIndicatorId:
          type: string
          description: unique identifier of the referenced indicator
        referencedIndicatorName:
          type: string
          description: the meaningful name of the referenced indicator
      description: a reference to another indicator, e.g. a sub-indicator that is
        used to compute the main indicator
    IndicatorSpatialUnitJoinItem:
      title: IndicatorSpatialUnitJoinItem
      required:
        - spatialUnitId
        - spatialUnitName
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        spatialUnitId:
          type: string
          description: ID of the applicable spatial unit
        spatialUnitName:
          type: string
          description: name of the applicable spatial unit
        userPermissions:
          type: array
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: '#/components/schemas/PermissionLevelType'
    LastModificationOverviewType:
      title: LastModificationOverviewType
      type: object
      properties:
        access-control:
          type: string
          format: date-time
        georesources:
          type: string
          format: date-time
        indicators:
          type: string
          format: date-time
        process-scripts:
          type: string
          format: date-time
        spatial-units:
          type: string
          format: date-time
        topics:
          type: string
          format: date-time
    OgcServicesType:
      title: OgcServicesType
      required:
        - defaultStyleName
        - spatialUnit
        - wfsUrl
        - wmsUrl
      type: object
      properties:
        defaultStyleName:
          type: string
          description: the name of the default style (SLD) that is published and applied
            to the associated dataset
        spatialUnit:
          type: string
          description: the name of the spatial unit
        wfsUrl:
          type: string
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
        wmsUrl:
          type: string
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
    OrganizationalUnitInputType:
      title: OrganizationalUnitInputType
      required:
        - contact
        - name
      type: object
      properties:
        contact:
          type: string
          description: contact information of the person responsible for this group
        description:
          type: string
          description: additional information
        name:
          type: string
          description: name of this organizational Unit
      description: organizational unit (group)
    OrganizationalUnitOverviewType:
      title: OrganizationalUnitOverviewType
      required:
        - contact
        - name
        - organizationalUnitId
        - roles
      type: object
      properties:
        contact:
          type: string
          description: contact information of the person responsible for this group
        description:
          type: string
          description: additional information
        name:
          type: string
          description: name of this organizational Unit
        organizationalUnitId:
          type: string
          description: unique id of this organizational Unit
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleOverviewType'
      description: organizational unit (group)
    PeriodOfValidityType:
      title: PeriodOfValidityType
      required:
        - startDate
      type: object
      properties:
        endDate:
          type: string
          description: an optional timestamp representing the ending date according
            to ISO 8601 (e.g. 2018-01-30). The parameter can be omitted, if the
            end date is unknown.
          format: date
        startDate:
          type: string
          description: a timestamp representing the starting date according to ISO
            8601 (e.g. 2018-01-30)
          format: date
      description: definition of the period of validity of a certain dataset
    ProcessInputType:
      title: ProcessInputType
      required:
        - dataType
        - defaultValue
        - description
        - name
      type: object
      properties:
        dataType:
          type: string
          description: the data type of the process input
          enum:
            - string
            - boolean
            - integer
            - double
        defaultValue:
          type: string
          description: the default value of the process parameter
        description:
          type: string
          description: a short description of the process input
        maxParameterValueForNumericInputs:
          type: number
          description: the maximum value that is allowed for the process parameter
          example: 0.0
        minParameterValueForNumericInputs:
          type: number
          description: the minimum value that is allowed for the process parameter
          example: 0.0
        name:
          type: string
          description: the name of the process input parameter
    ProcessScriptOverviewType:
      title: ProcessScriptOverviewType
      required:
        - description
        - indicatorId
        - name
        - requiredGeoresourceIds
        - requiredIndicatorIds
        - scriptId
        - variableProcessParameters
      type: object
      properties:
        description:
          type: string
          description: short description of the scripts content (what does it do)
        indicatorId:
          type: string
          description: unique identifier of the associated indicator (e.g. the indicator
            that is computed by a script or for which the values shall be aggregated
            to another spatial unit)
        name:
          type: string
          description: name of the process script
        requiredGeoresourceIds:
          type: array
          description: identifiers of georesources that are used within the script.
          items:
            type: string
        requiredIndicatorIds:
          type: array
          description: identifiers of indicators that are used within the script.
          items:
            type: string
        scriptId:
          type: string
          description: unique identifier of the process script
        scriptType:
          type: string
          description: a script type reference name used to distuingish process scripts
            from a client perspective, i.e. setup admin pages due to knowledge about
            type-specific script parameters and required indicators/georesources
        variableProcessParameters:
          type: array
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: '#/components/schemas/ProcessInputType'
    ProcessScriptPOSTInputType:
      title: ProcessScriptPOSTInputType
      required:
        - associatedIndicatorId
        - description
        - name
        - requiredGeoresourceIds
        - requiredIndicatorIds
        - scriptCodeBase64
        - variableProcessParameters
      type: object
      properties:
        associatedIndicatorId:
          type: string
          description: unique identifier of the associated indicator (e.g. the indicator
            that is computed by a script or for which the values shall be aggregated
            to another spatial unit)
        description:
          type: string
          description: short description of the scripts content (what does it do)
        name:
          type: string
          description: name of the process script
        requiredGeoresourceIds:
          type: array
          description: identifiers of georesources that are used within the script.
          items:
            type: string
        requiredIndicatorIds:
          type: array
          description: identifiers of indicators that are used within the script.
          items:
            type: string
        scriptCodeBase64:
          type: string
          description: the actual script code (JavaScript) as BASE64 encoded string
        scriptType:
          type: string
          description: a script type reference name used to distuingish process scripts
            from a client perspective, i.e. setup admin pages due to knowledge about
            type-specific script parameters and required indicators/georesources
        variableProcessParameters:
          type: array
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: '#/components/schemas/ProcessInputType'
    ProcessScriptPUTInputType:
      title: ProcessScriptPUTInputType
      required:
        - description
        - name
        - requiredGeoresourceIds
        - requiredIndicatorIds
        - scriptCodeBase64
        - variableProcessParameters
      type: object
      properties:
        description:
          type: string
          description: short description of the scripts content (what does it do)
        name:
          type: string
          description: name of the process script
        requiredGeoresourceIds:
          type: array
          description: identifiers of georesources that are used within the script.
          items:
            type: string
        requiredIndicatorIds:
          type: array
          description: identifiers of indicators that are used within the script.
          items:
            type: string
        scriptCodeBase64:
          type: string
          description: the actual script code (JavaScript) as BASE64 encoded string
        scriptType:
          type: string
          description: a script type reference name used to distuingish process scripts
            from a client perspective, i.e. setup admin pages due to knowledge about
            type-specific script parameters and required indicators/georesources
        variableProcessParameters:
          type: array
          description: list of process parameters that can be set by an expert user.
            They are used within the script to parameterize the indicator computation
          items:
            $ref: '#/components/schemas/ProcessInputType'
    RoleOverviewType:
      title: RoleOverviewType
      required:
        - permissionLevel
        - roleId
      type: object
      properties:
        permissionLevel:
          $ref: '#/components/schemas/PermissionLevelType'
        roleId:
          type: string
          description: the unique role identifier
      description: Combination of organizationalUnit and permissionLevel to control
        access to a resource
    SpatialUnitOverviewType:
      title: SpatialUnitOverviewType
      required:
        - allowedRoles
        - metadata
        - nextLowerHierarchyLevel
        - nextUpperHierarchyLevel
        - spatialUnitId
        - spatialUnitLevel
        - userPermissions
        - wfsUrl
        - wmsUrl
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        availablePeriodsOfValidity:
          type: array
          items:
            $ref: '#/components/schemas/PeriodOfValidityType'
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        nextLowerHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
        nextUpperHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
        spatialUnitId:
          type: string
          description: the unique identifier of the spatial unit level the features
            apply to
        spatialUnitLevel:
          type: string
          description: the name of the spatial unit level the features apply to
        userPermissions:
          type: array
          description: list of permissions that are effective on this dataset for
            the current user
          items:
            $ref: '#/components/schemas/PermissionLevelType'
        wfsUrl:
          type: string
          description: the URL of a running WFS instance serving the spatial features
            of the associated dataset
        wmsUrl:
          type: string
          description: the URL of a running WMS instance serving the spatial features
            of the associated dataset
        isOutlineLayer:
          type: boolean
          description: if true, then KomMonitor web client map application will offer this spatial unit as outline layer in legend control
        outlineColor:
          type: string
          description: outline color for this layer as hex code
        outlineWidth:
          type: number
          format: int32
          description: outline width as stroke width for outline geometry
        outlineDashArrayString:
          type: string
          description: 'string of line stroke dash array for lines of interest (e.g. 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)'
    SpatialUnitPATCHInputType:
      title: SpatialUnitPATCHInputType
      required:
        - allowedRoles
        - metadata
        - datasetName
        - nextLowerHierarchyLevel
        - nextUpperHierarchyLevel
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        datasetName: 
          type: string
          description: the name of the spatial unit - its "spatialUnitLevel"
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        nextLowerHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
        nextUpperHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
        isOutlineLayer:
          type: boolean
          description: if true, then KomMonitor web client map application will offer this spatial unit as outline layer in legend control
          default: false
        outlineColor:
          type: string
          description: outline color for this layer as hex code
        outlineWidth:
          type: number
          format: int32
          description: outline width as stroke width for outline geometry
        outlineDashArrayString:
          type: string
          description: 'string of line stroke dash array for lines of interest (e.g. 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)'
    SpatialUnitPOSTInputType:
      title: SpatialUnitPOSTInputType
      required:
        - allowedRoles
        - geoJsonString
        - jsonSchema
        - metadata
        - nextLowerHierarchyLevel
        - nextUpperHierarchyLevel
        - periodOfValidity
        - spatialUnitLevel
      type: object
      properties:
        allowedRoles:
          type: array
          description: list of role identifiers that have read access rights for this
            dataset
          items:
            type: string
        geoJsonString:
          type: string
          description: a valid GeoJSON string containing the features consisting of
            a geometry and a unique identifier as property 'uuid'
        jsonSchema:
          type: string
          description: a JSON schema as string that defines the data model for this
            dataset. It can be used to validate the geoJsonString property.
        metadata:
          $ref: '#/components/schemas/CommonMetadataType'
        nextLowerHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest lower hierarchy level
        nextUpperHierarchyLevel:
          type: string
          description: the identifier/name of the spatial unit level that contains
            the features of the nearest upper hierarchy level
        periodOfValidity:
          $ref: '#/components/schemas/PeriodOfValidityType'
        spatialUnitLevel:
          type: string
          description: the name and identifier of the spatial unit level the features
            apply to
        isOutlineLayer:
          type: boolean
          description: if true, then KomMonitor web client map application will offer this spatial unit as outline layer in legend control
          default: false
        outlineColor:
          type: string
          description: outline color for this layer as hex code
        outlineWidth:
          type: number
          format: int32
          description: outline width as stroke width for outline geometry
        outlineDashArrayString:
          type: string
          description: 'string of line stroke dash array for lines of interest (e.g. 20,20; see https://developer.mozilla.org/de/docs/Web/SVG/Attribute/stroke-dasharray)'
    SpatialUnitPUTInputType:
      title: SpatialUnitPUTInputType
      required:
        - geoJsonString
        - periodOfValidity
      type: object
      properties:
        geoJsonString:
          type: string
          description: a valid GeoJSON string containing the features consisting of
            a geometry and a unique identifier as property 'uuid'
        isPartialUpdate:
          type: boolean
          description: if set to TRUE, then a partial upload of geometries is possible.
            Missing features that are already in the database will then not be deleted
        periodOfValidity:
          $ref: '#/components/schemas/PeriodOfValidityType'
    TopicInputType:
      title: TopicInputType
      required:
        - topicDescription
        - topicName
        - topicType
      type: object
      properties:
        subTopics:
          type: array
          description: optional list of subTopics
          items:
            $ref: '#/components/schemas/TopicInputType'
        topicDescription:
          type: string
          description: short description of the topic
        topicId:
          type: string
          description: the topic identifier
        topicName:
          type: string
          description: the topic name
        topicResource:
          description: topic resource indicating if the topic object corresponds to
            an indicator or to a georesource
          $ref: '#/components/schemas/TopicResourceEnum'
        topicType:
          description: topic type indicating if the topic object is a subtopic or
            a main topic - only topics of type 'sub' shall be subTopics of topics
            with type 'main'
          $ref: '#/components/schemas/TopicTypeEnum'
    TopicOverviewType:
      title: TopicOverviewType
      required:
        - topicDescription
        - topicId
        - topicName
        - topicType
      type: object
      properties:
        subTopics:
          type: array
          description: optional list of subTopics
          items:
            $ref: '#/components/schemas/TopicOverviewType'
        topicDescription:
          type: string
          description: short description of the topic
        topicId:
          type: string
          description: the identifier of the topic
        topicName:
          type: string
          description: the topic name
        topicResource:
          description: topic resource indicating if the topic object corresponds to
            an indicator or to a georesource
          $ref: '#/components/schemas/TopicResourceEnum'
        topicType:
          description: topic type indicating if the topic object is a subtopic or
            a main topic - only topics of type 'sub' shall be subTopics of topics
            with type 'main'
          $ref: '#/components/schemas/TopicTypeEnum'
    ColorType:
      type: string
      description: Defines assignable colors for different feature styles, such as POI, LOI and AOI colors.
      enum:
        - white
        - red
        - orange
        - beige
        - green
        - blue
        - purple
        - pink
        - gray
        - black
    PermissionLevelType:
      type: string
      description: Permission Levels for CRUD operations.
        "crud" = create, read, update, delete
        "cru" = create, read, update
        "ru" = read, update
        "r" = read
      enum:
        - creator
        - publisher
        - editor
        - viewer
    IndicatorTypeEnum:
      type: string
      description: indicates whether the indicator is a status indicator (values represent the extent of the watched
        phenomenon for a certain point in time) or a dynamic indicator (values represent the change of extent of the
        watched phenomenon within a certain period of time)
      enum:
        - STATUS_ABSOLUTE
        - DYNAMIC_ABSOLUTE
        - STATUS_RELATIVE
        - DYNAMIC_RELATIVE
        - STATUS_STANDARDIZED
        - DYNAMIC_STANDARDIZED
    CreationTypeEnum:
      type: string
      enum:
        - INSERTION
        - COMPUTATION
        - AGGREGATION
    TopicResourceEnum:
      type: string
      enum:
        - indicator
        - georesource
    TopicTypeEnum:
      type: string
      enum:
        - main
        - sub
  securitySchemes:
    kommonitor-data-access_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://keycloak:8080/realms/kommonitor/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/kommonitor/protocol/openid-connect/token
          scopes: {}
x-original-swagger-version: "2.0"
