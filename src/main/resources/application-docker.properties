server.port=8085
spring.application.name=kommonitor-data-access-api
springfox.documentation.swagger.v2.path=/api-docs

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:kommonitor}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
database.host=${DATABASE_HOST:localhost}
database.port=${DATABASE_PORT:5432}
database.name=${DATABASE_NAME:kommonitor}

spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.properties.hibernate.hbm2ddl.auto = update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show-sql=false
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.time_zone = UTC

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.de.hsbo.kommonitor=INFO
logging.level.root=INFO

# properties for geoserver
ogc.enable_service_publication = ${ENABLE_OGC_PUBLISHMENT:false};
rest.url=http://${GEOSERVER_HOST:localhost}:${GEOSERVER_PORT:8080}/geoserver
rest.user=${GEOSERVER_USER:admin}
rest.password=${GEOSERVER_PASSWORD:geoserver}
workspace=${GEOSERVER_TARGET_WORKSPACE:kommonitor}
datastore_spatialunits=${GEOSERVER_DATASTORE_SPATIALUNITS:spatialunits}
datastore_georesources=${GEOSERVER_DATASTORE_GEORESOURCES:georesources}
datastore_indicators=${GEOSERVER_DATASTORE_INDICATORS:indicators}
defaultEPSG=${GEOSERVER_DEFAULT_EPSG:4326}

db.schema_spatialunits_name=${DB_SCHEMA_SPATIALUNITS:public}
db.schema_georesources_name=${DB_SCHEMA_GEORESOURCES:public}
db.schema_indicators_name=${DB_SCHEMA_INDICATORS:public}

# Do not use real values in production environment
kommonitor.swagger-ui.security.client-id=kommonitor-data-management
kommonitor.swagger-ui.security.secret=secret
# Use the next two parameters if you run the API behind a reverse proxy
# Host address of the reverse proxy
# kommonitor.swagger-ui.host=localhost
# Path mapping for this API in the reverse proxy
# kommonitor.swagger-ui.base-path=/kommonitor/api/datamanagement


# Prefixes used by the default organizationalUnits. If keycloak is enabled the following roles are created on startup:
# - <anonymous-users.organizationalUnit>-viewer
# - <authenticated-users.organizationalUnit>-creator
# - <authenticated-users.organizationalUnit>-publisher
# - <authenticated-users.organizationalUnit>-editor
# - <authenticated-users.organizationalUnit>-viewer
kommonitor.access-control.anonymous-users.organizationalUnit = public
kommonitor.access-control.authenticated-users.organizationalUnit=kommonitor

# Keycloak connection parameters
keycloak.enabled=false
keycloak.realm=kommonitor
swagger.keycloak.auth-server-url=http://keycloak:8080
keycloak.auth-server-url=http://keycloak:8080
keycloak.resource=kommonitor-data-management
keycloak.bearer-only=true
keycloak.autodetect-bearer-only=false
keycloak.ssl-required=external
keycloak.public-client=false
keycloak.cors=true
keycloak.cors-allowed-methods=*
keycloak.credentials.secret=secret

#Admin endpoints
keycloak.security-constraints[0].authRoles[0]=kommonitor-creator
keycloak.security-constraints[0].securityCollections[0].name=admin_operations
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/management/georesources/*
keycloak.security-constraints[0].securityCollections[0].patterns[1]=/management/spatial-units/*
keycloak.security-constraints[0].securityCollections[0].patterns[2]=/management/indicators/*
keycloak.security-constraints[0].securityCollections[0].patterns[3]=/management/roles/*
keycloak.security-constraints[0].securityCollections[0].patterns[4]=/management/process-scripts/*
keycloak.security-constraints[0].securityCollections[0].patterns[5]=/management/topics/*
keycloak.security-constraints[0].securityCollections[0].patterns[6]=/management/organizationalUnits/*
keycloak.security-constraints[0].securityCollections[0].methods=GET,POST,PUT,PATCH,DELETE
#keycloak.security-constraints[0].securityCollections[1].patterns[0]=/swagger-ui.html
#keycloak.security-constraints[0].securityCollections[1].patterns[1]=/api-docs

## Protected resources
kommonitor.authenticated-patterns = /management/georesources/*,/management/indicators/*,/management/spatial-units/*,/management/process-scripts/*,/management/roles/*,/management/organizationalUnits/*,/management/topics/*

## Constraints for authenticated users
keycloak.security-constraints[1].authRoles[0]=*
keycloak.security-constraints[1].securityCollections[0].name=authenticated-users_operations
keycloak.security-constraints[1].securityCollections[0].patterns[0]=/management/georesources/*
keycloak.security-constraints[1].securityCollections[0].patterns[1]=/management/spatial-units/*
keycloak.security-constraints[1].securityCollections[0].patterns[2]=/management/indicators/*
keycloak.security-constraints[1].securityCollections[0].patterns[3]=/management/topics/*
keycloak.security-constraints[1].securityCollections[0].methods=GET,POST,PUT,PATCH,DELETE
keycloak.security-constraints[1].securityCollections[1].name=authenticated-users_read-only
keycloak.security-constraints[1].securityCollections[1].patterns[0]=/management/organizationalUnits/*
keycloak.security-constraints[1].securityCollections[1].patterns[1]=/management/roles/*
keycloak.security-constraints[1].securityCollections[1].patterns[2]=/management/process-scripts/*
keycloak.security-constraints[1].securityCollections[1].methods=GET

##Public resources
keycloak.security-constraints[2].securityCollections[0].name=public_resources
keycloak.security-constraints[2].securityCollections[0].patterns[0]=/management/public/*
keycloak.security-constraints[2].securityCollections[0].methods=GET


# Whether response compression is enabled.
server.compression.enabled=true

# List of user-agents to exclude from compression.
server.compression.excluded-user-agents= 

# Comma-separated list of MIME types that should be compressed. Default mime-types are: text/html, text/xml, text/plain, text/css
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/geo+json,application/json,application/vnd.geo+json

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size=2048

encryption.enabled=false
encryption.symmetric.aes.password=password
encryption.symmetric.aes.iv.length_byte=16

