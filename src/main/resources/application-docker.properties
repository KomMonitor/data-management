server.port=8085
spring.application.name=kommonitor-data-access-api

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:kommonitor}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
database.host=${DATABASE_HOST:localhost}
database.port=${DATABASE_PORT:5432}
database.name=${DATABASE_NAME:kommonitor}

spring.jpa.properties.hibernate.hbm2ddl.auto = none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show-sql=false
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.time_zone = UTC

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/kommonitor
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/kommonitor/protocol/openid-connect/certs

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.de.hsbo.kommonitor=INFO
logging.level.root=INFO

# properties for geoserver
ogc.enable_service_publication = ${ENABLE_OGC_PUBLISHMENT:false};
rest.url=http://${GEOSERVER_HOST:localhost}:${GEOSERVER_PORT:8080}/geoserver
rest.user=${GEOSERVER_USER:admin}
rest.password=${GEOSERVER_PASSWORD:geoserver}
workspace=${GEOSERVER_TARGET_WORKSPACE:kommonitor}
datastore_spatialunits=${GEOSERVER_DATASTORE_SPATIALUNITS:spatialunits}
datastore_georesources=${GEOSERVER_DATASTORE_GEORESOURCES:georesources}
datastore_indicators=${GEOSERVER_DATASTORE_INDICATORS:indicators}
defaultEPSG=${GEOSERVER_DEFAULT_EPSG:4326}

db.schema_spatialunits_name=${DB_SCHEMA_SPATIALUNITS:public}
db.schema_georesources_name=${DB_SCHEMA_GEORESOURCES:public}
db.schema_indicators_name=${DB_SCHEMA_INDICATORS:public}

# Server to use by Swagger-UI
kommonitor.swagger-ui.server=http://localhost:8085
kommonitor.data-management.allowed-cors-origins=*

# Prefixes used by the default organizationalUnits. If keycloak is enabled the following roles are created on startup:
# - <anonymous-users.organizationalUnit>-viewer
# - <authenticated-users.organizationalUnit>-creator
# - <authenticated-users.organizationalUnit>-publisher
# - <authenticated-users.organizationalUnit>-editor
# - <authenticated-users.organizationalUnit>-viewer
kommonitor.access-control.anonymous-users.organizationalUnit = public
kommonitor.access-control.authenticated-users.organizationalUnit=kommonitor

# set to true in order to force recreation of all indicator views on startup
kommonitor.recreateAllViewsOnStartup=false

kommonitor.locale=de

# Keycloak connection parameters
keycloak.enabled=true
keycloak.realm=kommonitor
keycloak.auth-server-url=http://keycloak:8080

springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs
springdoc.swagger-ui.path=/api-docs
springdoc.swagger-ui.oauth2RedirectUrl=http://localhost:8085/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.oauth.clientId=kommonitor-data-management
springdoc.swagger-ui.oauth.clientSecret=secret
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha

# Whether response compression is enabled.
server.compression.enabled=true

# List of user-agents to exclude from compression.
server.compression.excluded-user-agents= 

# Comma-separated list of MIME types that should be compressed. Default mime-types are: text/html, text/xml, text/plain, text/css
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/geo+json,application/json,application/vnd.geo+json

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size=2048

encryption.enabled=false
encryption.symmetric.aes.password=password
encryption.symmetric.aes.iv.length_byte=16